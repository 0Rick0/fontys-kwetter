package nl.rickrongen.fontys.kwetter.RestApi;

import nl.rickrongen.fontys.kwetter.Domain.User;
import nl.rickrongen.fontys.kwetter.Service.KwetterService;
import nl.rickrongen.fontys.kwetter.interceptors.Log;

import javax.annotation.security.DeclareRoles;
import javax.annotation.security.RolesAllowed;
import javax.inject.Inject;
import javax.ws.rs.*;
import javax.ws.rs.core.*;
import java.net.URI;
import java.util.Base64;
import java.util.List;

/**
 * Created by rick on 3/8/17.
 */
@Path("user")
@Log
@DeclareRoles({"users", "admins"})
public class KwetterUserApi {

    private static final String[] extraUser = new String[]{"user", "/user/{username}"};
    private static final String[] extraKwet = new String[]{"kwet", "/kwets/byid/{id}"};
    private static final String[] extraProfile = new String[]{"profilepicture", "/user/{username}/profilepicture"};
    private static final String[] extraFollow = new String[]{"follow", "/user/{username}/follow/{username}"};
    private static final String[] extraByUser = new String[]{"byuser", "/kwets/byuser/{username}"};
    private static final String[] extraFeed = new String[]{"feed", "/kwets/feed/{username}"};

    @Inject
    KwetterService service;
    @Context
    UriInfo uriInfo;
    URI normalUri;

    @GET
    @Path("/")
    @Produces(MediaType.APPLICATION_JSON)
    public SuccesObject getUsers(@QueryParam("start") @DefaultValue("0") int start,
                                 @QueryParam("count") @DefaultValue("10") int count) {
        List<User> users = service.getUsers(start, count);
        SuccesObject<List<User>> succesObject = new SuccesObject<>(users != null, users);
        succesObject.setSelf(getSelfUrl());
        succesObject.setNext(normalUri.getPath() + String.format("?start=%d&count=%d", start + count, count));
        succesObject.setPrevious(normalUri.getPath() + String.format("?start=%d&count=%d", Math.max(start - count, 0), count));
        succesObject.addExtra(extraUser, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraKwet, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraProfile, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraFollow, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraByUser, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraFeed, uriInfo.getBaseUriBuilder());
        return succesObject;
    }

    @GET
    @Path("auth/{username}")
    @Produces("application/json")
    @RolesAllowed("users")
    public SuccesObject getAuthUserByName(@PathParam("username") String username) {
        return getUserByName(username);
    }

    @GET
    @Path("{username}")
    @Produces("application/json")
    public SuccesObject getUserByName(@PathParam("username") String username) {
        try {
            User u = service.getUser(username);
            SuccesObject<User> succesObject = new SuccesObject<>(u != null, u);
            succesObject.setSelf(getSelfUrl());
            succesObject.addExtra(extraUser, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraKwet, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraProfile, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraFollow, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraByUser, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraFeed, uriInfo.getBaseUriBuilder());
            return succesObject;
        } catch (Exception e) {
            return new SuccesObject<>(false, e);
        }
    }

    @GET
    @Path("{username}/follow/{target}")
    @Produces("application/json")
    @RolesAllowed("users")
    public SuccesObject follow(@PathParam("username") String username, @PathParam("target") String toFollow, @Context SecurityContext ctx) {
        if (ctx.getUserPrincipal() == null || ctx.getUserPrincipal().getName() == null)
            return new SuccesObject<>(false, "You are not logged in!");
        if (!ctx.getUserPrincipal().getName().equals(username)) {
            return new SuccesObject<>(false, "You can only act as yourself!");
        }
        try {
            User u = service.getUser(username);
            User target = service.getUser(toFollow);
            SuccesObject<User> succesObject = new SuccesObject<>(u != null && target != null && service.toggleFollow(u, target), u);
            succesObject.addExtra(extraUser, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraKwet, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraProfile, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraFollow, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraByUser, uriInfo.getBaseUriBuilder());
            succesObject.addExtra(extraFeed, uriInfo.getBaseUriBuilder());
            succesObject.setSelf(getSelfUrl());
            return succesObject;
        } catch (Exception e) {
            return new SuccesObject<>(false, e);
        }
    }
    @GET
    @Path("{username}/profilepicture")
    @Produces({"image/png","image/jpeg"})
    public Response getProfilePicture(@PathParam("username") String username){
        User u = service.getUser(username);
        byte[] image;
        String contentType;
        if(u == null || u.getProfilePicture() == null || u.getProfilePicture().isEmpty()){
            image = getDefaultImage();
            contentType = "image/png";
        }else{
            String[] imageparts = decodeImage(u.getProfilePicture());
            if(imageparts == null){
                image = getDefaultImage();
                contentType = "image/png";
            }else {
                contentType = imageparts[0];
                if(contentType.endsWith(";base64"))
                    contentType=contentType.substring(0,contentType.length()-7);
                image = Base64.getDecoder().decode(imageparts[1]);
            }
        }
        final byte[] imagef = image;
        return Response.ok().header("Content-Type",contentType).entity((StreamingOutput) outputStream -> {
            outputStream.write(imagef);
            outputStream.flush();
        }).build();
    }

    @POST
    @Path("/")
    @Consumes("application/x-www-form-urlencoded")
    @Produces(MediaType.APPLICATION_JSON)
    public SuccesObject addUser(@FormParam("username") String username,
                                @FormParam("password") String password,
                                @FormParam("fullname") String fullname,
                                @FormParam("location") String location,
                                @FormParam("website") String website,
                                @FormParam("biography") String biography) {
        SuccesObject<Object> succesObject = new SuccesObject<>(service.addUser(username, fullname, password, location, website, biography), null);
        succesObject.setSelf(normalUri.getPath() + (uriInfo.getPath().endsWith("/") ? "" : "/") + username);
        succesObject.addExtra(extraUser, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraKwet, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraProfile, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraFollow, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraByUser, uriInfo.getBaseUriBuilder());
        succesObject.addExtra(extraFeed, uriInfo.getBaseUriBuilder());
        return succesObject;
    }

    private String[] decodeImage(String datauri){
        if(!datauri.startsWith("data:"))
            return null; // Not a data uri
        if(!datauri.contains(","))
            return null; // Not a data uri

        return datauri.substring(5).split(",", 2);
    }

    private String getSelfUrl(){
        normalUri = uriInfo.getRequestUri();
        if(normalUri.getQuery() == null)
            return normalUri.getPath();
        return normalUri.getPath() + "?" + normalUri.getQuery();
    }

    private byte[] getDefaultImage(){
        String b64 = "";
        return Base64.getDecoder().decode(b64);
    }
}
